// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241204151355_ProtfolioPeriodGraph")]
    partial class ProtfolioPeriodGraph
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Persistence.Entities.Price", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("Persistence.Entities.Protfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Protfolios");
                });

            modelBuilder.Entity("Persistence.Entities.ProtfolioPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("date");

                    b.Property<Guid>("ProtfolioId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ProtfolioId");

                    b.ToTable("ProtfolioPeriods");
                });

            modelBuilder.Entity("Persistence.Entities.ProtfolioPeriodGraph", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Graphdata")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProtfolioPeriodId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProtfolioPeriodId");

                    b.ToTable("ProtfolioPeriodGraphs");
                });

            modelBuilder.Entity("Persistence.Entities.ProtfolioStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProtfolioId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Ratio")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProtfolioId");

                    b.HasIndex("StockId");

                    b.ToTable("ProtfolioStocks");
                });

            modelBuilder.Entity("Persistence.Entities.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("MaxPriceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("MinPriceDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Persistence.Entities.Price", b =>
                {
                    b.HasOne("Persistence.Entities.Stock", "Stock")
                        .WithMany("Prices")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Persistence.Entities.ProtfolioPeriod", b =>
                {
                    b.HasOne("Persistence.Entities.Protfolio", "Protfolio")
                        .WithMany("Periods")
                        .HasForeignKey("ProtfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Protfolio");
                });

            modelBuilder.Entity("Persistence.Entities.ProtfolioPeriodGraph", b =>
                {
                    b.HasOne("Persistence.Entities.ProtfolioPeriod", "ProtfolioPeriod")
                        .WithMany()
                        .HasForeignKey("ProtfolioPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProtfolioPeriod");
                });

            modelBuilder.Entity("Persistence.Entities.ProtfolioStock", b =>
                {
                    b.HasOne("Persistence.Entities.Protfolio", "Protfolio")
                        .WithMany("Stocks")
                        .HasForeignKey("ProtfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Persistence.Entities.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Protfolio");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("Persistence.Entities.Protfolio", b =>
                {
                    b.Navigation("Periods");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Persistence.Entities.Stock", b =>
                {
                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
